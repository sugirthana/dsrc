1.employee.hbm.xml
*******************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC  
 "-//Hibernate/Hibernate Mapping DTD 3.0//EN"  
 "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">  
  
 <hibernate-mapping>  
  <class name="com.dsrc.bean.Employee" table="EmployeeXX">  
    <id name="empno">  
     <generator class="assigned"></generator>  
    </id>              
    <property name="name"></property>  
    <property name="city"></property>  
  </class>        
 </hibernate-mapping>

hibernate.cfg.xml
******************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC  
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"  
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">  
  
<hibernate-configuration>  
  
    <session-factory>  
        <property name="hbm2ddl.auto">update</property>  
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>  
        <property name="connection.url">jdbc:mysql://localhost:3306/myhibernate</property>  
        <property name="connection.username">root</property>  
        <property name="connection.password">dsrc</property>  
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>  
     <mapping resource="employee.hbm.xml"/>   
      </session-factory>  
</hibernate-configuration>

Employee.java(POJO)
********************
package com.dsrc.bean;

public class Employee {
	private int empno;
	private String name;
	private String city;
	Employee(int empno,String name, String city)
	 {
		 this.empno=empno;
		 this.name=name;
		 this.city=city;
	 }
	
	public int getEmpno() {
		return empno;
	}
	public void setEmpno(int empno) {
		this.empno = empno;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}

}
MyMain.java
**************
package com.dsrc.bean;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class MyMain {
	public static void main(String[] args) {
		SessionFactory sx=new Configuration().configure().buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		Employee emp=new Employee(101,"ishu","delhi");
		s.save(emp);
		tx.commit();
		System.out.println("Data Saved..");
	
	}

	public void saveEmployee(Employee eb) {
		// TODO Auto-generated method stub	
	}
}
____________________________________________________________________________________________________________________________________________
2.Department.java(POJO)
*******************
package com.dsrc.bean;

public class Department {
	private int deptno;
	private String deptname;
	private String location;
	
	public int getDeptno() {
		return deptno;
	}
	public void setDeptno(int deptno) {
		this.deptno = deptno;
	}
	public String getDeptname() {
		return deptname;
	}
	public void setDeptname(String deptname) {
		this.deptname = deptname;
	}
	public String getLocation() {
		return location;
	}
	public void setLocation(String location) {
		this.location = location;
	}
	}
hibernate.cfg.xml
*******************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC  
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"  
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">    
<hibernate-configuration>    
    <session-factory>  
        <property name="hbm2ddl.auto">update</property>  
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>  
        <property name="connection.url">jdbc:mysql://localhost:3306/myhibernate</property>  
        <property name="connection.username">root</property>  
        <property name="connection.password">dsrc</property>  
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>  
     <mapping resource="department.hbm.xml"/>   
      </session-factory>  
</hibernate-configuration>

department.hbm.xml
**********************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC  
 "-//Hibernate/Hibernate Mapping DTD 3.0//EN"  
 "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">  
  
 <hibernate-mapping>  
  <class name="com.dsrc.bean.Department" table="department">  
    <id name="deptno">  
     <generator class="assigned"></generator>  
    </id>              
    <property name="deptname"></property>  
    <property name="location"></property>  
  </class>        
 </hibernate-mapping>

MyMain.java
*************
package com.dsrc;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.dsrc.bean.Department;

public class MyMain {

	public static void main(String[] args) {

		Department dep=new Department();
		dep.setDeptno(10);
		dep.setDeptname("chemistry");
		dep.setLocation("Block A");
		MyMain main=new MyMain();
		main.saveDepartment(dep);		
	}	
	public void saveDepartment(Department d) {
		SessionFactory sx=new Configuration().configure().buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		s.save(d);
		tx.commit();
		System.out.println("Data Saved..");
	}
}
__________________________________________________________________________________________________________________________________________
3.Employee.java(POJO)
*****************
package com.dsrc.bean;

public class Employee {
	private int empno;
	private String name;
	private String city;
	
	public int getEmpno() {
		return empno;
	}
	public void setEmpno(int empno) {
		this.empno = empno;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;
	}
	
}

usercode.java
**************
package com.dsrc.util;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.dsrc.bean.Employee;

public class UserCode {
	
	public boolean saveEmployee(Employee bean)
	{
		
		SessionFactory sx=new Configuration().configure().buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		s.save(bean);
		tx.commit();
		System.out.println("Data Saved..");
		return true;
	}
}
MyMain.java
**************
import java.util.Scanner;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

import com.dsrc.bean.Employee;
import com.dsrc.util.UserCode;

public class MyMain {

	public static void main(String[] args) {
		Employee bean=new Employee();
		System.out.println("Employee Management");
		System.out.println("***********************");
		System.out.println("1.Enter Data");
		System.out.println("2.Exit");
		System.out.println("Enter your choice(1/2) :");
		Scanner sc=new Scanner(System.in);
		int ch=sc.nextInt();
		switch(ch)
		{
		case 1:
			
			System.out.println("Enter EmpNo :");
			bean.setEmpno(sc.nextInt());
			System.out.println("Enter Name :");
			bean.setName(sc.next());
			System.out.println("Enter City :");
			bean.setCity(sc.next());
			new UserCode().saveEmployee(bean);
			break;
		case 2: 
			System.out.println("end the application...");
		}
	}
}
__________________________________________________________________________________________________________________________________________________
4.Using annotation (import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;)
Department.java
*******************
@Entity
@Table(name="department")
public class Department {
	@Id
	@Column(name="deptno")
	private int deptno;
	@Column(name="deptname")
	private String deptname;
	@Column(name="location")
	private String location;
	
	public int getDeptno() {
		return deptno;
	}
	public void setDeptno(int deptno) {
		this.deptno = deptno;
	}
	public String getDeptname() {
		return deptname;
	}
	public void setDeptname(String deptname) {
		this.deptname = deptname;
	}
	public String getLocation() {
		return location;
	}
	public void setLocation(String location) {
		this.location = location;
	}
}
Usercode.java
**************
package com.dsrc.util;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;
import org.hibernate.cfg.Configuration;
import com.dsrc.bean.Department;
public class UserCode {	
	public boolean saveDepartment(Department d)
	{		
		SessionFactory sx=new AnnotationConfiguration().configure().addAnnotatedClass	(Department.class).buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		s.save(d);
		tx.commit();
		System.out.println("Data Saved..");
		return true;
	}}
MyMain.java
*************
import java.util.Scanner;
import com.dsrc.bean.Department;
import com.dsrc.util.UserCode;
public class MyMain {
	public static void main(String[] args) {
		Department bean=new Department();
		System.out.println("Department Management");
		System.out.println("***********************");
		System.out.println("1.Enter Data");
		System.out.println("2.Exit");
		System.out.println("Enter your choice(1/2) :");
		Scanner sc=new Scanner(System.in);
		int ch=sc.nextInt();
		switch(ch)
		{
		case 1:	
			System.out.println("Enter Deptno :");
			bean.setDeptno(sc.nextInt());
			System.out.println("Enter DeptName :");
			bean.setDeptname(sc.next());
			System.out.println("Enter location :");
			bean.setLocation(sc.next());
			new UserCode().saveDepartment(bean);
			break;
		case 2: 
			System.out.println("end the application...");
		}}}

hibernate.cfg.xml
*******************
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC  
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"  
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">   
<hibernate-configuration>  
    <session-factory>  
        <property name="hbm2ddl.auto">update</property>  
        <property name="dialect">org.hibernate.dialect.MySQLDialect</property>  
        <property name="connection.url">jdbc:mysql://localhost:3306/myhibernate</property>  
        <property name="connection.username">root</property>  
        <property name="connection.password">dsrc</property>  
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>     
      </session-factory>  
</hibernate-configuration> 
________________________________________________________________________________________________________________________________
5.
Employee.java
*******************
package com.dsrc.bean;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="Employee")
public class Employee {
	@Id
	@Column(name="empno")
	private int empno;
	@Column(name="name")
	private String name;
	@Column(name="city")
	private String city;
	
	public int getEmpno() {
		return empno;
	}
	public void setEmpno(int empno) {
		this.empno = empno;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getCity() {
		return city;
	}
	public void setCity(String city) {
		this.city = city;	}}
Usercode.java
**************
package com.dsrc.util;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;

import com.dsrc.bean.Employee;

public class UserCode {
	
	public boolean updateEmployee(Employee bean)
	{
		
		SessionFactory sx=new AnnotationConfiguration().configure().addAnnotatedClass(Employee.class).buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		Employee employee=(Employee)s.get(Employee.class, bean.getEmpno());
		employee.setName(bean.getName());
		employee.setCity(bean.getCity());
		s.update(employee);
		tx.commit();
		System.out.println("Data Saved..");
		return true;	
	}
}
MyMain.java
****************
import java.util.Scanner;
import com.dsrc.bean.Employee;
import com.dsrc.util.UserCode;
public class MyMain {

	public static void main(String[] args) {
		Employee bean=new Employee();
		System.out.println("Employee Management");
		System.out.println("***********************");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter EmpNo :");
		bean.setEmpno(sc.nextInt());
		System.out.println("Enter Name :");
		bean.setName(sc.next());
		System.out.println("Enter City :");
		bean.setCity(sc.next());
		new UserCode().updateEmployee(bean);
	}}
____________________________________________________________________________________________________________________________________________
6.MyMain.java
**************
import com.dsrc.bean.Employee;
import com.dsrc.util.UserCode;
public class MyMain {
	public static void main(String[] args) {
		Employee emp=new Employee();
		emp.setEmpno(105);
		emp.setName("paul");
		emp.setCity("kerala");
		new UserCode().updateEmployee(emp);
	}
}
Usercode.java
***************
package com.dsrc.util;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;
import org.hibernate.cfg.Configuration;
import com.dsrc.bean.Employee;

public class UserCode {	
	public boolean updateEmployee(Employee bean)
	{
		
		SessionFactory sx=new AnnotationConfiguration().configure().addAnnotatedClass(Employee.class).buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		s.save(bean);
		tx.commit();
		System.out.println("Data Saved..");
		return true;
	}}
______________________________________________________________________________________________________________________
8.
MyMain.java
**************
Employee bean=new Employee();
		System.out.println("Employee Management");
		System.out.println("***********************");
		System.out.println("1.Enter Data");
		System.out.println("2.Exit");
		System.out.println("Enter your choice(1/2) :");
		Scanner sc=new Scanner(System.in);
		int ch=sc.nextInt();
		switch(ch)
		{
		case 1:
			
			System.out.println("Enter EmpNo :");
			bean.setEmpno(sc.nextInt());
			System.out.println("Enter Name :");
			bean.setName(sc.next());
			System.out.println("Enter City :");
			bean.setCity(sc.next());
			new UserCode().saveEmployee(bean);
			break;
		case 2: 
			System.out.println("end the application...");
		}
Usercode.java
************

		SessionFactory sx=new AnnotationConfiguration().configure().addAnnotatedClass(Employee.class).buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		s.save(bean);
		tx.commit();
		System.out.println("Data Saved..");
		return true;
____________________________________________________________________________________________________________
9.MyMain.java
***************
import java.util.Scanner;
import com.dsrc.bean.Employee;
import com.dsrc.util.UserCode;
public class MyMain {
	public static void main(String[] args) {
		Employee bean=new Employee();
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter EmpNo :");
		bean.setEmpno(sc.nextInt());
		new UserCode().deleteEmployee(bean);
	}
}
Usercode.java
*************
package com.dsrc.util;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;
import com.dsrc.bean.Employee;
public class UserCode {	
	public boolean deleteEmployee(Employee bean)
	{		
		SessionFactory sx=new AnnotationConfiguration().configure().addAnnotatedClass(Employee.class).buildSessionFactory();
		Session s=sx.openSession();
		Transaction tx=s.beginTransaction();
		Employee employee=(Employee)s.get(Employee.class, bean.getEmpno());
		s.delete(employee);
		tx.commit();
		System.out.println("Data updated..");
		return true;		
	}
}
___________________________________________________________________________________________________________
10.